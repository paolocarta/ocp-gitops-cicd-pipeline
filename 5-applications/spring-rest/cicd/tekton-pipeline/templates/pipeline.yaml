apiVersion: tekton.dev/v1alpha1
kind: Pipeline
metadata:
  labels:
{{ include "springboot-tekton.labels" . | nindent 4 }}
  name: {{ include "springboot-tekton.fullname" . }}-pipeline
spec:
  workspaces:
  - name: local-maven-repo
  - name: exchange-area
  resources:
  ### The microservice
  - name: {{ include "springboot-tekton.fullname" . }}-source
    type: git
  ### GitOps repo with manifests
  - name: gitops-repo
    type: git
  - name: {{ include "springboot-tekton.fullname" . }}-image
    type: image

  tasks:
  - name: maven-build
    taskRef: 
      name: maven-build
    resources:
      inputs:
      - name: source
        resource: {{ include "springboot-tekton.fullname" . }}-source
    workspaces:
    - name: maven-repo
      workspace: local-maven-repo
    - name: output-area
      workspace: exchange-area

  - name: container-image-build
    taskRef: 
      name: container-image-build
    resources:
      inputs:
      - name: source
        resource: {{ include "springboot-tekton.fullname" . }}-source
        # from: [maven-build]
      outputs:
      - name: image
        resource: {{ include "springboot-tekton.fullname" . }}-image
    params:
    - name: image-tag
      value: "$(tasks.maven-build.results.image-tag)"
    workspaces:
    - name: output-area
      workspace: exchange-area

  # - name: deploy-to-stage
  #   taskRef:
  #     name: deploy
  #   resources:
  #     inputs:
  #     - name: gitops-repo
  #       resource: gitops-repo
  #     - name: image
  #       resource: {{ include "springboot-tekton.fullname" . }}-image
  #   params:
  #   - name: deployment-folder
  #     value: "5-applications/spring-rest/manifests/overlays/stage" 
  #   workspaces:
  #   - name: output-area
  #     workspace: exchange-area
  #   runAfter:
  #     - maven-and-image-build
  
  # - name: sync-application-stage
  #   taskRef:
  #     name: argocd-task-sync-and-wait
  #   params:
  #     - name: application-name
  #       value: spring-boot-rest-stage
  #     - name: flags
  #       value: --insecure
  #   runAfter:
  #     - deploy-to-stage